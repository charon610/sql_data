SELECT * FROM employees;

SELECT employee_id, email FROM employees;

SELECT employee_id, first_name, last_name FROM employees ORDER BY employee_id DESC;

SELECT DISTINCT job_id FROM employees;

SELECT employee_id as 사원번호, first_name as 이름, last_name as 성 FROM employees;

SELECT employee_id, first_name || last_name FROM employees;
                      
SELECT employee_id, first_name ||' '|| last_name, email||'@company.com' FROM employees;

SELECT employee_id, salary+500, salary-100, (salary*1.1)/2 FROM employees;

SELECT employee_id as 사원번호, salary+500 as 추가급여, salary-100 as 인하급여, (salary*1.1)/2 as 조정급여 FROM employees;

SELECT * FROM employees WHERE employee_id = 100;

SELECT * FROM employees WHERE first_name = 'David';

SELECT * FROM employees WHERE employee_id >= 105;

SELECT * FROM employees WHERE salary BETWEEN 10000 AND 20000 ;

SELECT * FROM employees WHERE salary IN(10000, 17000, 24000);

SELECT * FROM employees WHERE job_id LIKE 'AD%';

--job_id에서 AD이후 3글자
SELECT * FROM employees WHERE job_id LIKE 'AD___';

SELECT * FROM employees WHERE manager_id IS null;

SELECT * FROM employees WHERE salary > 400 AND job_id = 'IT_PROG'; 

SELECT * FROM employees WHERE salary > 400 AND job_id = 'IT_PROG' OR job_id = 'FI_ACCOUNT'; 

SELECT * FROM employees WHERE employee_id <> 105;

SELECT * FROM employees WHERE manager_id IS NOT null;

SELECT LOWER(last_name), UPPER(last_name), email, INITCAP(email) FROM employees;

SELECT job_id, SUBSTR(job_id, 1, 2) FROM employees;

SELECT job_id, REPLACE(job_id,'ACCOUNT','ACCNT') FROM employees;

SELECT first_name, LPAD(first_name, 12, '*') FROM employees;

SELECT 'start'||TRIM(' - space - ')||'end' 제거된_공백 FROM dual;

SELECT salary/30, TRUNC(salary/30,1) 소수점_첫째자리, TRUNC(salary/30,2) 소수점_둘째자리, TRUNC(salary/30,-1)정수버림  FROM employees;



SELECT * FROM employees ORDER BY commission_pct;

SELECT salary * commission_pct FROM employees ORDER BY commission_pct;

SELECT salary * NVL(commission_pct,1)commission_pct FROM employees ORDER BY commission_pct;

SELECT first_name, last_name, department_id, salary, DECODE(department_id, 60, salary*1.1, salary) 급여조정,  DECODE(department_id, 60, '10% 인상', '미 인상') 인상여부 FROM employees;

SELECT first_name, last_name, salary, CASE
                                        WHEN salary >= 9000 THEN '상위급여'
                                        WHEN salary BETWEEN 6000 AND 8999 THEN '중위급여'
                                        ELSE '하위급여'
                                    END AS 급여등급
FROM employees
WHERE job_id = 'IT_PROG';

SELECT employee_id, salary, 
        RANK() OVER(ORDER BY salary DESC) RANK_급여,
        DENSE_RANK() OVER(ORDER BY salary DESC) DENSE_RANK_급여,
        ROW_NUMBER() OVER(ORDER BY salary DESC) ROW_NUMBER_급여
FROM employees;


SELECT
    A.employee_id,
    A.department_id,
    B.department_name,
    salary,
    RANK() OVER(PARTITION BY A.department_id ORDER BY salary DESC) RANK_급여,
    DENSE_RANK() OVER(PARTITION BY A.department_id ORDER BY salary DESC) DENSE_RANK_급여,
    ROW_NUMBER() OVER(PARTITION BY A.department_id ORDER BY salary DESC) ROW_NUMBER_급여
FROM employees A, departments B
WHERE A.department_id = B.department_id
ORDER BY B.department_id, A.salary DESC;
